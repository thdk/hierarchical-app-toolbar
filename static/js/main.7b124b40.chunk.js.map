{"version":3,"sources":["contexts/toolbar-context/toolbar-context.tsx","components/toolbar-breadcrumbs/toolbar-breadcrumbs.tsx","contexts/view-context/view-context.tsx","components/top-bar/top-bar.tsx","components/toolbar-button/toolbar-button.tsx","components/toolbar/toolbar.tsx","components/menu/menu.tsx","components/toolbar/toolbar-siblings.tsx","components/layout/layout.tsx","components/home-screen/home-screen.tsx","contexts/todo-context/todo-context.tsx","components/todo-list/todo-list.tsx","components/button/button.tsx","components/todo-filters/todo-filters.tsx","components/todo-toolbar/recipes.tsx","components/todo-toolbar/todo-toolbar.tsx","components/todos-screen/todos-screen.tsx","components/text/text.tsx","core/editor/reducer/photos-reducer.ts","core/editor/reducer/html-reducer.ts","core/editor/reducer/editor-reducer.ts","core/editor/selector/html-selector.ts","core/editor/selector/editor-selector.ts","contexts/editor-context/editor-context.tsx","components/editor/editor.tsx","components/editor-toolbar/css-button.tsx","components/slider/slider.tsx","components/pixel-slider/pixel-slider.tsx","components/editor-toolbar/text/text.tsx","components/editor-toolbar/text/alignment.tsx","components/editor-toolbar/text/headings.tsx","components/editor-toolbar/text/index.ts","components/photo-list/photo-list.tsx","components/editor-toolbar/photo-toolbar.tsx","components/editor-toolbar/editor-toolbar.tsx","components/editor-screen/editor-screen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["isChildOf","path","currentPath","paths","current","get","parent","ToolbarContext","React","createContext","activeReducer","state","action","type","payload","id","active","trailReducer","getBreadcrumbs","includeCurrent","undefined","navigation","breadcrumbs","Array","from","values","some","p","trail","contentReducer","nextPath","content","pathsReducer","Map","items","map","i","newPaths","forEach","item","set","buttonsReducer","buttons","target","filter","children","length","toolbarReducer","NavigationProvider","useReducer","dispatch","allPaths","useMemo","useCallback","Error","navigate","options","allowChild","navigateUp","steps","navigateDown","reset","toolbarContext","add","activePath","navigationContent","navigationTrail","Provider","value","useToolbar","useContext","Seperator","isLast","NavigationBreadcrumbs","className","index","key","onClick","e","preventDefault","onBackClick","href","ViewContext","ViewContextProvider","useState","isMenuOpen","setIsMenuOpen","context","toggleMenu","closeMenu","useViewContext","library","faChevronLeft","faEllipsisV","faBars","faQuestion","TopBarNavigation","icon","TopBarActions","TopBar","cssClass","classNames","ToolbarButton","isActive","restProps","Toolbar","toolbar","button","Menu","to","ToolbarSiblings","parentItem","siblings","showSiblings","indexOf","Layout","HomeScreen","TodoContext","TodoProvider","completed","todoFilter","setTodoFilter","todos","setTodos","filteredTodos","setFilteredTodos","toggleCompleted","useEffect","todo","useTodos","TodoList","fetch","then","response","json","console","log","title","Button","text","TodoFilterCompleted","checked","onChange","recipes","RecipesButton","isLoading","setIsLoading","setTimeout","faAmbulance","faUtensils","todoToolbar","faListUl","faRobot","TodosScreen","Text","tag","Tag","photosReducer","photos","elementsReducer","data","findIndex","updatedItem","slice","defaultStyleReducer","htmlSelectionReducer","htmlReducer","selectedId","defaultStyle","editorReducer","html","selectSelectedHtmlData","find","selectHtmlState","selectPhotosState","EditorContext","EditorContextProvider","textAlign","fontSize","contextValue","useHtmlReducer","usePhotosReducer","Editor","bind","style","CssButton","alignmentStyle","buttonStyle","fontWeight","Object","keys","every","Slider","min","max","PixelSlider","cssProperty","selectedHtml","newStyle","replace","faHeading","faTextWidth","faTextHeight","faParagraph","faAlignCenter","textMain","padding","letterSpacing","alignmentData","faAlignJustify","faAlignLeft","faAlignRight","textAlignment","headingData","headings","PhotoList","alt","src","thumbnailUrl","FilmrollButton","Promise","resolve","finally","faFilm","photoToolbar","faFacebook","faGoogle","faFlickr","faInstagram","editorToolbar","faCameraRetro","faQuoteRight","EditorScreen","fetchedHtml","faCoffee","faJedi","faUserAstronaut","faFish","faPizzaSlice","faStroopwafel","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b124b40.chunk.js","sourcesContent":["import React, { useCallback, useMemo } from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { useReducer } from \"react\";\r\n\r\nexport type ToolbarButton = {\r\n    button: React.ReactNode;\r\n    content?: React.ReactNode;\r\n    parent?: string;\r\n    id: string;\r\n    showSiblings?: boolean;\r\n    navigate?: boolean;\r\n    render?: (toolbar: ToolbarContext, id: string, button: React.ReactNode) => ReactNode;\r\n}\r\n\r\ntype NavigateOptions = {\r\n    allowChild?: boolean,\r\n};\r\n\r\nexport interface ToolbarContext {\r\n    activePath?: string;\r\n    navigateDown: (id: string) => void,\r\n    navigateUp: (steps?: number) => void,\r\n    navigate: (id: string | undefined, options?: NavigateOptions) => void,\r\n    buttons: ToolbarButton[],\r\n    allPaths: ToolbarButton[],\r\n    navigationContent: React.ReactNode | (() => void),\r\n    navigationTrail: (string | undefined)[],\r\n    reset: (items: ToolbarButton[]) => void,\r\n    add: (items: ToolbarButton[]) => void,\r\n    get: (path: string) => ToolbarButton,\r\n}\r\n\r\nfunction getBreadcrumbs(\r\n    paths: Map<string, ToolbarButton>,\r\n    current: string | undefined,\r\n    { includeCurrent = true } = {},\r\n): (string | undefined)[] {\r\n    if (!current) return [undefined];\r\n\r\n    const navigation = paths.get(current);\r\n    if (!navigation || !navigation.parent) {\r\n        return includeCurrent\r\n            ? [undefined, current]\r\n            : [undefined];\r\n    }\r\n\r\n    const breadcrumbs = getBreadcrumbs(paths, navigation.parent, {\r\n        includeCurrent: true\r\n    });\r\n\r\n    return includeCurrent\r\n        ? [...breadcrumbs, current]\r\n        : breadcrumbs;\r\n}\r\n\r\nfunction isChildOf(path: string | undefined, currentPath: string | undefined, paths: Map<string, ToolbarButton>): boolean {\r\n    if (!currentPath) {\r\n        return false;\r\n    }\r\n\r\n    const current = paths.get(currentPath);\r\n\r\n    if (!current) {\r\n        return false;\r\n    }\r\n\r\n    if (!current.parent) {\r\n        return false;\r\n    }\r\n\r\n    if (current.parent && current.parent === path) {\r\n        return true;\r\n    }\r\n\r\n    return isChildOf(path, current.parent, paths);\r\n}\r\n\r\nconst ToolbarContext = React.createContext({} as ToolbarContext);\r\n\r\ntype ToolbarAction =\r\n    { type: \"navigate\", payload: { id: string | undefined } } |\r\n    { type: \"close-content\" } |\r\n    { type: \"reset\", payload: { items: ToolbarButton[] } } |\r\n    { type: \"add\", payload: { items: ToolbarButton[] } }\r\n    ;\r\n\r\ntype ToolbarState = {\r\n    trail: (string | undefined)[];\r\n    content: ReactNode | undefined;\r\n    active: string | undefined;\r\n    paths: Map<string, ToolbarButton>;\r\n    buttons: ToolbarButton[];\r\n}\r\n\r\n\r\nconst activeReducer = (state: ToolbarState, action: ToolbarAction) => {\r\n    switch (action.type) {\r\n        case \"navigate\": {\r\n\r\n            return action.payload.id;\r\n        }\r\n        case \"close-content\":\r\n            return undefined;\r\n        case \"reset\":\r\n            return undefined;\r\n        default:\r\n            return state.active;\r\n    }\r\n};\r\n\r\nconst trailReducer = (state: ToolbarState, action: ToolbarAction) => {\r\n    switch (action.type) {\r\n        case \"navigate\":\r\n            return getBreadcrumbs(\r\n                state.paths,\r\n                action.payload.id,\r\n                {\r\n                    includeCurrent: Array.from(state.paths.values())\r\n                        .some(p => p.parent === action.payload.id),\r\n                },\r\n            );\r\n        case \"reset\":\r\n            return [undefined];\r\n        default:\r\n            return state.trail;\r\n    }\r\n};\r\n\r\nconst contentReducer = (state: ToolbarState, action: ToolbarAction) => {\r\n    switch (action.type) {\r\n        case \"navigate\": {\r\n            const nextPath = action.payload.id !== undefined\r\n                ? state.paths.get(action.payload.id)\r\n                : undefined;\r\n\r\n            return nextPath\r\n                ? nextPath.content\r\n                : undefined;\r\n        }\r\n        case \"close-content\":\r\n            return undefined;\r\n        case \"reset\":\r\n            return undefined;\r\n        default:\r\n            return state.content;\r\n    }\r\n};\r\n\r\nconst pathsReducer = (state: ToolbarState, action: ToolbarAction) => {\r\n    switch (action.type) {\r\n        case \"reset\": {\r\n            return new Map(action.payload.items.map(i => [i.id, i]));\r\n        }\r\n        case \"add\": {\r\n            const newPaths = new Map(state.paths);\r\n            action.payload.items.forEach(item => newPaths.set(item.id, item));\r\n            return newPaths;\r\n        }\r\n        default:\r\n            return state.paths;\r\n    }\r\n};\r\n\r\nconst buttonsReducer = (state: ToolbarState, action: ToolbarAction) => {\r\n    switch (action.type) {\r\n        case \"navigate\": {\r\n            if (action.payload.id === state.active) {\r\n                return state.buttons;\r\n            }\r\n\r\n            const paths = Array.from(state.paths.values());\r\n            const target = action.payload.id && state.paths.get(action.payload.id);\r\n            if (!target) {\r\n                return paths\r\n                    .filter(p => !p.parent);\r\n            }\r\n\r\n            const children = Array.from(state.paths.values())\r\n                .filter(path => path.parent === action.payload.id);\r\n\r\n            return children.length\r\n                ? children\r\n                : paths.filter(p => p.parent === target.parent);\r\n\r\n        }\r\n        case \"reset\": {\r\n            return action.payload.items\r\n                .filter(path => path.parent === undefined);\r\n        }\r\n        default:\r\n            return state.buttons;\r\n    }\r\n};\r\n\r\nconst toolbarReducer = (state: ToolbarState, action: ToolbarAction): ToolbarState => {\r\n    return {\r\n        active: activeReducer(state, action),\r\n        trail: trailReducer(state, action),\r\n        content: contentReducer(state, action),\r\n        paths: pathsReducer(state, action),\r\n        buttons: buttonsReducer(state, action),\r\n    };\r\n};\r\n\r\nexport const NavigationProvider = ({\r\n    children,\r\n}: React.PropsWithChildren<{\r\n    paths: ToolbarButton[],\r\n}>) => {\r\n    const [{\r\n        active,\r\n        content,\r\n        trail,\r\n        paths,\r\n        buttons,\r\n    }, dispatch] = useReducer<typeof toolbarReducer>(toolbarReducer, {\r\n        trail: [undefined],\r\n        paths: new Map(),\r\n        content: null,\r\n        active: undefined,\r\n        buttons: [],\r\n    });\r\n\r\n    const allPaths = useMemo(() => {\r\n        return Array.from(paths.values());\r\n    }, [paths]);\r\n\r\n    const get = useCallback((path: string) => {\r\n        const item = paths.get(path);\r\n        if (!item) {\r\n            throw new Error(\"No toolbar item found for \" + path);\r\n        }\r\n\r\n        return item;\r\n    }, [paths]);\r\n\r\n    const navigate = useCallback((path: string | undefined, options: NavigateOptions = {}) => {\r\n        if (path === active) return;\r\n\r\n        if (options.allowChild && isChildOf(path, active, paths)) {\r\n            return;\r\n        }\r\n\r\n        dispatch({\r\n            type: \"navigate\",\r\n            payload: {\r\n                id: path,\r\n            },\r\n        });\r\n\r\n    }, [paths, active]);\r\n\r\n    const navigateUp = useCallback((steps = 1) => {\r\n        dispatch({\r\n            type: \"navigate\",\r\n            payload: {\r\n                id: trail[trail.length - 1 - steps],\r\n            },\r\n        });\r\n    }, [trail]);\r\n\r\n    const navigateDown = useCallback((target: string) => {\r\n        if (target === active) {\r\n            dispatch({\r\n                type: \"close-content\",\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: \"navigate\",\r\n                payload: {\r\n                    id: target,\r\n                },\r\n            });\r\n\r\n        }\r\n\r\n    }, [active]);\r\n\r\n    const reset = useCallback((items: ToolbarButton[]) => {\r\n        dispatch({\r\n            type: \"reset\",\r\n            payload: {\r\n                items,\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    const add = useCallback((items: ToolbarButton[]) => {\r\n        dispatch({\r\n            type: \"add\",\r\n            payload: {\r\n                items,\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    const toolbarContext = {\r\n        allPaths,\r\n        add,\r\n        activePath: active,\r\n        get,\r\n        navigate,\r\n        navigateDown,\r\n        navigateUp,\r\n        buttons,\r\n        navigationContent: content,\r\n        navigationTrail: trail,\r\n        reset,\r\n    };\r\n    return (\r\n        <ToolbarContext.Provider value={toolbarContext}>\r\n            {children}\r\n        </ToolbarContext.Provider>\r\n    )\r\n};\r\n\r\nexport const useToolbar = () => {\r\n    return React.useContext(ToolbarContext);\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\n\r\nimport \"./toolbar-breadcrumbs.css\";\r\n\r\nconst Seperator = ({ isLast = false }: { isLast?: boolean }) => {\r\n    return isLast\r\n        ? <></>\r\n        : <span> - </span>;\r\n};\r\n\r\nexport const NavigationBreadcrumbs = () => {\r\n    const {\r\n        navigateUp,\r\n        navigationTrail,\r\n    } = useToolbar();\r\n\r\n\r\n    const onBackClick = (e: React.MouseEvent, steps = 1) => {\r\n        e.preventDefault();\r\n        navigateUp(steps);\r\n    };\r\n\r\n    return (\r\n        <div className=\"navigation-breadcrumbs\">\r\n            {navigationTrail.map((item, index) => {\r\n                const isLast = index === navigationTrail.length - 1;\r\n                return (\r\n                    <span key={index}>\r\n                        {isLast\r\n                            ? <span>{item || \"Main\"}</span>\r\n                            : <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n                                onClick={e => onBackClick(e, navigationTrail.length - 1 - index)}\r\n                                href=\"#\"\r\n                            >\r\n                                {item || \"Main\"}\r\n                            </a>\r\n                        }\r\n                        <Seperator\r\n                            isLast={isLast}\r\n                        />\r\n                    </span>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\ntype ViewContextProps = {\r\n    isMenuOpen: boolean;\r\n    toggleMenu: () => void;\r\n    closeMenu: () => void;\r\n}\r\n\r\nconst ViewContext = React.createContext({} as ViewContextProps);\r\n\r\nexport const ViewContextProvider = ({\r\n    children,\r\n}: React.PropsWithChildren<unknown>) => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n    const context = {\r\n        isMenuOpen,\r\n        toggleMenu: () => setIsMenuOpen(!isMenuOpen),\r\n        closeMenu: () => setIsMenuOpen(false),\r\n    };\r\n\r\n    return (\r\n        <ViewContext.Provider value={context}>\r\n            {children}\r\n        </ViewContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useViewContext = () => {\r\n    return React.useContext(ViewContext);\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faChevronLeft, faBars, faEllipsisV, faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { NavigationBreadcrumbs } from \"../toolbar-breadcrumbs\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { useViewContext } from \"../../contexts/view-context\";\r\nimport \"./top-bar.css\";\r\n\r\nlibrary.add(faChevronLeft, faEllipsisV, faBars, faQuestion);\r\n\r\nconst TopBarNavigation = () => {\r\n    const {\r\n        navigationTrail,\r\n        navigateUp,\r\n    } = useToolbar();\r\n\r\n    const { toggleMenu } = useViewContext();\r\n\r\n    return (\r\n        navigationTrail.length > 1\r\n            ? <FontAwesomeIcon\r\n                icon=\"chevron-left\"\r\n                onClick={() => navigateUp()}\r\n            />\r\n            : <FontAwesomeIcon\r\n                icon={faBars}\r\n                onClick={toggleMenu}\r\n            />\r\n    );\r\n}\r\n\r\nconst TopBarActions = () => {\r\n    const {\r\n        navigationTrail,\r\n    } = useToolbar();\r\n\r\n    return (\r\n        navigationTrail.length > 1\r\n            ? <FontAwesomeIcon\r\n                icon=\"question\"\r\n            />\r\n            : <FontAwesomeIcon\r\n                icon={\"ellipsis-v\"}\r\n            />\r\n    );\r\n}\r\n\r\nexport const TopBar = () => {\r\n    const {\r\n        navigationTrail,\r\n    } = useToolbar();\r\n\r\n    const cssClass = classNames([\r\n        \"top-bar\",\r\n        {\r\n            \"top-bar--contextual\": navigationTrail.length > 1,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div className={cssClass}>\r\n            <div className=\"top-bar__left\">\r\n                <TopBarNavigation />\r\n            </div>\r\n\r\n            <div className=\"top-bar__center\">\r\n                <NavigationBreadcrumbs />\r\n            </div>\r\n\r\n            <div className=\"top-bar__right\">\r\n                <TopBarActions />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { HTMLProps } from \"react\";\r\n\r\nimport \"./toolbar-button.css\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const ToolbarButton = ({\r\n    children,\r\n    isActive = false,\r\n    className,\r\n    ...restProps\r\n}: HTMLProps<HTMLDivElement> & {\r\n    isActive?: boolean,\r\n}) => {\r\n\r\n    const cssClass = classNames([\r\n        className,\r\n        \"toolbar-button\",\r\n        {\r\n            \"toolbar-button--active\": isActive,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            className={cssClass}\r\n            {...restProps}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { ToolbarButton } from \"../toolbar-button\";\r\n\r\nimport \"./toolbar.css\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const Toolbar = () => {\r\n    const toolbar = useToolbar();\r\n    const {\r\n        activePath,\r\n        navigationContent,\r\n        buttons,\r\n        navigateDown,\r\n    } = toolbar;\r\n\r\n    const cssClass = classNames([\r\n        \"toolbar\",\r\n        {\r\n            \"toolbar--closed\": !buttons.length,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div className={cssClass}>\r\n            {\r\n                navigationContent ?\r\n                    <div className=\"toolbar__content\">\r\n                        {navigationContent}\r\n                    </div>\r\n                    : null\r\n            }\r\n\r\n            <div className=\"toolbar__items\">\r\n                {\r\n                    buttons.map((\r\n                        {\r\n                            button,\r\n                            id,\r\n                            content,\r\n                            navigate = true,\r\n                        }) => (\r\n                            <ToolbarButton\r\n                                key={id}\r\n                                isActive={!!content && activePath === id}\r\n                                onClick={navigate ? () => navigateDown(id) : undefined}\r\n                            >\r\n                                {button}\r\n                            </ToolbarButton>\r\n                        ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./menu.css\";\r\nimport { useViewContext } from \"../../contexts/view-context\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const Menu = () => {\r\n    const { isMenuOpen } = useViewContext();\r\n\r\n    const { closeMenu } = useViewContext();\r\n\r\n    const onClick = useCallback(() => {\r\n        closeMenu();\r\n    }, [closeMenu]);\r\n\r\n    const cssClass = classNames([\r\n        \"menu\",\r\n        {\r\n            \"menu--open\": isMenuOpen,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div className={cssClass}>\r\n            <Link to=\"/\" onClick={onClick}>Home</Link>\r\n            <Link to=\"/editor\" onClick={onClick}>Editor</Link>\r\n            <Link to=\"/todos\" onClick={onClick}>To do</Link>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { ToolbarButton } from \"../toolbar-button\";\r\n\r\nexport const ToolbarSiblings = () => {\r\n    const {\r\n        navigationTrail,\r\n        get,\r\n        navigate,\r\n        allPaths,\r\n    } = useToolbar();\r\n\r\n    const current = navigationTrail[navigationTrail.length - 1];\r\n\r\n    const parentItem = current && get(current);\r\n\r\n    const siblings = parentItem && parentItem.showSiblings\r\n        ? allPaths.filter(p => p.parent === parentItem.parent)\r\n        : undefined;\r\n\r\n    return siblings\r\n        ? (\r\n            <div className=\"toolbar-siblings\">\r\n                {\r\n                    siblings.map(({ button, id\r\n                    }) => (\r\n                            <ToolbarButton\r\n                                key={id}\r\n                                isActive={navigationTrail.indexOf(id) !== -1}\r\n                                onClick={() => navigate(id)}\r\n                            >\r\n                                {button}\r\n                            </ToolbarButton>\r\n                        ))\r\n                }\r\n            </div>\r\n        )\r\n        : <></>;\r\n};\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport { TopBar } from \"../top-bar\";\r\nimport { Toolbar } from \"../toolbar\";\r\nimport { Menu } from \"../menu\";\r\n\r\nimport \"./layout.css\";\r\nimport { ToolbarSiblings } from \"../toolbar/toolbar-siblings\";\r\n\r\n\r\nexport const Layout = ({\r\n    children,\r\n}: PropsWithChildren<unknown>) => {\r\n    return (\r\n        <div className=\"app\">\r\n            <TopBar />\r\n            <aside>\r\n            <Menu />\r\n            </aside>\r\n            <div className=\"app__body\">\r\n                {children}\r\n            </div>\r\n            <Toolbar />\r\n            <ToolbarSiblings/>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"../layout\";\r\n\r\nexport const HomeScreen = () => {\r\n    return (\r\n        <Layout>\r\n            Home\r\n        </Layout>\r\n    );\r\n};\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nexport interface ITodo {\r\n    userId: number,\r\n    id: number,\r\n    title: string,\r\n    completed: boolean\r\n}\r\n\r\ntype TodoContextType = {\r\n    todos: ITodo[],\r\n    toggleCompleted: () => void;\r\n    setTodos: (todos: ITodo[]) => void;\r\n    filter: {\r\n        completed: boolean;\r\n    }\r\n};\r\n\r\nconst TodoContext = React.createContext({} as TodoContextType);\r\n\r\nexport const TodoProvider: React.FC = ({\r\n    children,\r\n}: React.PropsWithChildren<unknown>) => {\r\n    const [todoFilter, setTodoFilter] = useState({\r\n        completed: true,\r\n    });\r\n\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n    const [filteredTodos, setFilteredTodos] = useState<ITodo[]>([]);\r\n\r\n    const toggleCompleted = useCallback(() => {\r\n        setTodoFilter({ ...todoFilter, completed: !todoFilter.completed });\r\n    }, [todoFilter]);\r\n\r\n    useEffect(() => {\r\n        setFilteredTodos(todoFilter.completed ? todos.filter(todo => !todo.completed) : todos);\r\n    }, [todoFilter, setFilteredTodos, todos]);\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            todos: filteredTodos,\r\n            toggleCompleted,\r\n            setTodos,\r\n            filter: todoFilter,\r\n        }}\r\n        >\r\n            {children}\r\n        </TodoContext.Provider>\r\n    )\r\n};\r\n\r\nexport const useTodos = () => {\r\n    return React.useContext(TodoContext);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTodos } from \"../../contexts/todo-context\";\r\n\r\nexport const TodoList = () => {\r\n    const {\r\n        todos,\r\n        setTodos,\r\n    } = useTodos();\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/todos')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log({ json });\r\n                setTodos(json);\r\n            });\r\n\r\n    }, [setTodos]);\r\n\r\n    if (!todos) return <></>;\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {\r\n                todos\r\n                    .map((todo, index) => {\r\n                        return (\r\n                            <div\r\n                                className=\"todo\"\r\n                                key={todo.id + index}\r\n                            >\r\n                                {todo.completed ? \"V\" : \"X\"}\r\n                        -\r\n                                {todo.title}\r\n                            </div>\r\n                        );\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport \"./button.css\";\r\n\r\nexport const Button = ({\r\n    text,\r\n    icon,\r\n    ...restProps\r\n}: {\r\n    text: string,\r\n    icon: IconProp,\r\n} & React.HTMLProps<HTMLDivElement>) => {\r\n    return (\r\n        <div\r\n            className=\"button\"\r\n            {...restProps}\r\n        >\r\n            <FontAwesomeIcon\r\n                className=\"button__icon\"\r\n                icon={icon}\r\n            />\r\n            <span\r\n                className=\"button__text\"\r\n            >\r\n                {text}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useTodos } from \"../../contexts/todo-context\";\r\n\r\nimport \"./todo-filters.css\";\r\n\r\nexport const TodoFilterCompleted = () => {\r\n    const { toggleCompleted, filter: { completed } } = useTodos();\r\n\r\n    return (\r\n        <div\r\n            className=\"todo-filter todo-filter-completed\"\r\n        >\r\n            <label>Hide completed todos</label>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={toggleCompleted}\r\n            ></input>\r\n        </div>\r\n    )\r\n};","import { Button } from \"../button\";\r\nimport React from \"react\";\r\n\r\nconst parent = \"recipes\";\r\nexport const recipes = [\r\n    {\r\n        button: <Button icon=\"fish\" text=\"Great fish\" />,\r\n        parent,\r\n        id: \"fish\",\r\n        navigate: false,\r\n    },\r\n    {\r\n        button: <Button icon=\"stroopwafel\" text=\"Belgian waffle\" />,\r\n        parent,\r\n        id: \"waffle\",\r\n        navigate: false,\r\n    },\r\n    {\r\n        button: <Button icon=\"pizza-slice\" text=\"Pizza\" />,\r\n        parent,\r\n        id: \"pizza\",\r\n        navigate: false,\r\n    },\r\n]","import { Button } from \"../button\";\r\nimport React from \"react\";\r\nimport { TodoFilterCompleted } from \"../todo-filters\";\r\nimport { recipes } from \"./recipes\";\r\nimport { faRobot, faUtensils, faListUl, faAmbulance } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst RecipesButton = () => {\r\n    const {\r\n        add,\r\n        navigateDown,\r\n    } = useToolbar();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onClick = useCallback(() => {\r\n        setIsLoading(true);\r\n        setTimeout(() => {\r\n            add(recipes);\r\n            setIsLoading(false);\r\n            navigateDown(\"recipes\");\r\n        }, 2000);\r\n    }, [add, navigateDown]);\r\n\r\n    return (\r\n        <Button\r\n            icon={isLoading ? faAmbulance : faUtensils}\r\n            text={isLoading ? \"Loading...\" : \"Recipes\"}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\nexport const todoToolbar = [\r\n    {\r\n        button: <Button icon={faListUl} text=\"To do\" />,\r\n        content: <TodoFilterCompleted />,\r\n        id: \"to do\",\r\n    },\r\n    {\r\n        button: <Button icon={faRobot} text=\"Space robot\" />,\r\n        content: <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                </p>,\r\n        id: \"robot\",\r\n    },\r\n    {\r\n        navigate: false,\r\n        button: <RecipesButton />,\r\n        id: \"recipes\",\r\n    },\r\n];\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { TodoList } from \"../todo-list\";\r\nimport { Layout } from \"../layout\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { todoToolbar } from \"../todo-toolbar\";\r\n\r\nexport const TodosScreen = () => {\r\n    const {\r\n        reset,\r\n    } = useToolbar();\r\n    useEffect(() => {\r\n        reset(todoToolbar);\r\n        return () => {\r\n            reset([]);\r\n        };\r\n    }, [reset]);\r\n\r\n    return (\r\n            <Layout>\r\n                <TodoList />\r\n            </Layout>\r\n    );\r\n}\r\n","import React, { PropsWithChildren, HTMLProps } from \"react\";\r\nimport { HtmlTag } from \"../../core/editor/types\";\r\n\r\nexport const Text = ({\r\n    children,\r\n    tag: Tag = \"p\",\r\n    ...restProps\r\n}: PropsWithChildren<{\r\n    tag: HtmlTag,\r\n}> & HTMLProps<HTMLHeadingElement | HTMLParagraphElement>) => {\r\n    return (\r\n        <Tag {...restProps}>\r\n            {children}\r\n        </Tag>\r\n    );\r\n};\r\n","import { Photo } from \"../types\";\r\n\r\nexport type PhotosState = {\r\n    photos: Photo[];\r\n};\r\n\r\nexport type PhotosAction = { type: \"add\", payload: Photo[]};\r\n\r\nexport function photosReducer(state: PhotosState, action: PhotosAction) {\r\n    switch(action.type) {\r\n        case \"add\": {\r\n            return {\r\n                photos: action.payload,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { HtmlData } from \"../types\";\r\n\r\nexport type HtmlState = {\r\n    data: HtmlData[];\r\n    selectedId: string | undefined;\r\n    defaultStyle: HtmlData[\"style\"];\r\n}\r\n\r\nexport type HtmlAction =\r\n    | { type: 'update-html', data: Partial<HtmlData>, id: string }\r\n    | { type: 'add-html', data: HtmlData }\r\n    | { type: 'select-html', data: string | undefined }\r\n    | { type: 'set-default-style', data: HtmlData[\"style\"] }\r\n    | { type: 'request-html' }\r\n    | { type: 'request-html-success', data: HtmlData[] }\r\n    ;\r\n\r\nexport function elementsReducer(state: HtmlData[], action: HtmlAction): HtmlData[] {\r\n    switch (action.type) {\r\n        case 'request-html-success':{\r\n            return action.data;\r\n        }\r\n        case 'update-html': {\r\n            const index = state.findIndex(i => i.id === action.id);\r\n            const updatedItem = { ...state[index], ...action.data };\r\n            return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n        }\r\n        case 'add-html':\r\n            return [...state, action.data];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function defaultStyleReducer(state: HtmlData[\"style\"], action: HtmlAction): HtmlData[\"style\"] {\r\n    switch (action.type) {\r\n        case 'set-default-style':\r\n            return action.data;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport function htmlSelectionReducer(state: string | undefined, action: HtmlAction): string | undefined {\r\n    switch (action.type) {\r\n        case 'select-html':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function htmlReducer(state: HtmlState, action: HtmlAction): HtmlState {\r\n    return {\r\n        data: elementsReducer(state.data, action),\r\n        selectedId: htmlSelectionReducer(state.selectedId, action),\r\n        defaultStyle: defaultStyleReducer(state.defaultStyle, action),\r\n    };\r\n}\r\n","import { photosReducer, PhotosState, PhotosAction } from \"./photos-reducer\";\r\nimport { HtmlAction, HtmlState, htmlReducer } from \"./html-reducer\";\r\n\r\nexport type EditorAction = PhotosAction | HtmlAction;\r\n\r\nexport type EditorState = {\r\n    photos: PhotosState;\r\n    html: HtmlState;\r\n};\r\n\r\nexport function editorReducer(state: EditorState, action: EditorAction) {\r\n    return {\r\n        photos: photosReducer(state.photos, action as PhotosAction),\r\n        html: htmlReducer(state.html, action as HtmlAction),\r\n    };\r\n}\r\n","import { HtmlState } from \"../reducer\";\r\nimport { HtmlData } from \"../types\";\r\n\r\nexport function selectSelectedHtmlData(state: HtmlState): HtmlData | undefined {\r\n    const id = state.selectedId;\r\n\r\n    if (!id) return undefined;\r\n\r\n    return state.data.find(i => i.id === id);\r\n}\r\n","import { EditorState } from \"../reducer/editor-reducer\";\r\n\r\nexport function selectHtmlState(state: EditorState) {\r\n    return state.html;\r\n}\r\n\r\nexport function selectPhotosState(state: EditorState) {\r\n    return state.photos;\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { editorReducer, EditorState, EditorAction } from \"../../core/editor/reducer/editor-reducer\";\r\nimport { selectHtmlState, selectPhotosState } from \"../../core/editor/selector\";\r\nimport { Photo } from \"../../core/editor/types\";\r\n\r\nexport const EditorContext = React.createContext({} as { state: EditorState, dispatch: React.Dispatch<EditorAction> });\r\n\r\nexport const EditorContextProvider = ({ children }: React.PropsWithChildren<unknown>) => {\r\n    const [state, dispatch] = useReducer<typeof editorReducer>(editorReducer, {\r\n        html: {\r\n            data: [],\r\n            selectedId: undefined,\r\n            defaultStyle: {\r\n                textAlign: \"left\",\r\n                fontSize: \"10px\",\r\n            }\r\n        },\r\n        photos: {\r\n            photos: [] as Photo[],\r\n        }\r\n    });\r\n\r\n    const contextValue = useMemo(() => {\r\n        return { state, dispatch };\r\n    }, [state, dispatch]);\r\n\r\n    return (\r\n        <EditorContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditorContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useEditorReducer = () => React.useContext(EditorContext);\r\n\r\nexport const useHtmlReducer = () => {\r\n    const {state, dispatch} = React.useContext(EditorContext);\r\n    return {\r\n        state: selectHtmlState(state),\r\n        dispatch,\r\n    };\r\n}\r\n\r\nexport const usePhotosReducer = () => {\r\n    const {state, dispatch} = React.useContext(EditorContext);\r\n    return {\r\n        state: selectPhotosState(state),\r\n        dispatch,\r\n    };\r\n}","import React from \"react\";\r\n\r\nimport \"./editor.css\";\r\nimport { useCallback } from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { Text } from \"../text\";\r\nimport { useHtmlReducer } from \"../../contexts/editor-context\";\r\n\r\nexport const Editor = () => {\r\n    const {\r\n        navigate,\r\n    } = useToolbar();\r\n\r\n    const {\r\n        state,\r\n        dispatch\r\n    } = useHtmlReducer();\r\n\r\n    const onClick = useCallback((id: string) => {\r\n        navigate(\"text\", { allowChild: true });\r\n        dispatch({\r\n            type: \"select-html\",\r\n            data: id,\r\n        })\r\n    }, [navigate, dispatch]);\r\n\r\n    return (\r\n        <div\r\n            className=\"editor\"\r\n        >\r\n            <p>Click the text below to select and start editing</p>\r\n            {state.data.map(i => {\r\n                return (\r\n                    <Text\r\n                        key={i.id}\r\n                        tag={i.tag}\r\n                        onClick={onClick.bind(null, i.id)}\r\n                        className={state.selectedId === i.id ? \"active\" : undefined}\r\n                        style={i.style}\r\n                    >\r\n                        {i.content}\r\n                    </Text>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useCallback, CSSProperties } from \"react\";\r\n\r\nimport { CssData } from \"./text/types\";\r\nimport { useHtmlReducer } from \"../../contexts/editor-context\";\r\nimport { selectSelectedHtmlData } from \"../../core/editor/selector\";\r\nimport { Button } from \"../button\";\r\n\r\nexport const CssButton = ({\r\n    data,\r\n}: {\r\n    data: CssData,\r\n}) => {\r\n    const { state, dispatch } = useHtmlReducer();\r\n    const { icon, text, style: alignmentStyle } = data;\r\n    const current = selectSelectedHtmlData(state);\r\n    const { style, id } = current || {};\r\n\r\n    const onClick = useCallback(() => {\r\n        if (id) {\r\n            dispatch({\r\n                type: \"update-html\",\r\n                data: {\r\n                    style: { ...style, ...alignmentStyle }\r\n                },\r\n                id,\r\n            });\r\n        }\r\n    }, [dispatch, alignmentStyle, id, style]);\r\n\r\n    const isActive = current\r\n        && current.style\r\n        && Array.from(Object.keys(alignmentStyle))\r\n            .every((key => {\r\n                return (alignmentStyle)[key as keyof typeof alignmentStyle] === (current.style)[key as keyof typeof current.style]\r\n            }));\r\n\r\n    const buttonStyle: CSSProperties = {\r\n        fontWeight: isActive ? \"bold\" : \"normal\",\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            style={buttonStyle}\r\n            icon={icon}\r\n            text={text}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n}","import React, { HTMLProps } from \"react\";\r\n\r\nimport \"./slider.css\";\r\n\r\nexport const Slider = ({\r\n    min,\r\n    max,\r\n    value,\r\n    ...restProps\r\n}: {\r\n    min: number,\r\n    max: number,\r\n    value: number,\r\n}  & HTMLProps<HTMLInputElement>) => {\r\n\r\n    return (\r\n        <div className=\"slider\">\r\n            <input\r\n                min={min}\r\n                max={max}\r\n                type=\"range\"\r\n                value={value}\r\n                {...restProps}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React, { useCallback, CSSProperties } from \"react\";\r\nimport { useHtmlReducer } from \"../../contexts/editor-context\";\r\nimport { selectSelectedHtmlData } from \"../../core/editor/selector\";\r\nimport { Slider } from \"../slider\";\r\n\r\nexport const PixelSlider = ({\r\n    cssProperty,\r\n}: {\r\n    cssProperty: keyof CSSProperties\r\n}) => {\r\n    const { state, dispatch } = useHtmlReducer();\r\n    const selectedHtml = selectSelectedHtmlData(state);\r\n    const onChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!selectedHtml) {\r\n            return;\r\n        }\r\n\r\n        const { style, id } = selectedHtml;\r\n\r\n        const newStyle = {\r\n            ...style,\r\n        };\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        (newStyle as unknown as any)[cssProperty] = e.target.value + \"px\";\r\n\r\n        dispatch({\r\n            type: \"update-html\",\r\n            data: {\r\n                style: newStyle,\r\n            },\r\n            id,\r\n        },\r\n        )\r\n    }, [dispatch, selectedHtml, cssProperty]);\r\n\r\n\r\n    if (!selectedHtml) {\r\n        return <p>Select some text first</p>\r\n    }\r\n\r\n    const { style } = selectedHtml;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const value = +((style as unknown as any)[cssProperty] || \"\").replace(/[A-Za-z]/g, '');\r\n\r\n    return (\r\n        <Slider\r\n            onChange={onChange}\r\n            min={1}\r\n            max={50}\r\n            value={value}\r\n        />\r\n    );\r\n};","import { Button } from \"../../button\";\r\nimport React from \"react\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faHeading, faTextWidth, faTextHeight, faParagraph, faAlignCenter } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToolbarButton } from \"../../../contexts/toolbar-context\";\r\nimport { CssButton } from \"../css-button\";\r\nimport { PixelSlider } from \"../../pixel-slider\";\r\n\r\nlibrary.add(faHeading, faTextWidth, faTextHeight, faParagraph, faAlignCenter);\r\n\r\nconst parent = \"text\";\r\nexport const textMain = [\r\n    {\r\n        button: <Button icon=\"text-width\" text=\"Text width\" />,\r\n        content: <PixelSlider cssProperty={\"letterSpacing\"} />,\r\n        parent,\r\n        id: \"text-width\",\r\n    },\r\n    {\r\n        button: <Button icon=\"text-height\" text=\"Text height\" />,\r\n        content: <PixelSlider cssProperty={\"fontSize\"} />,\r\n        parent,\r\n        id: \"text-height\",\r\n    },\r\n    {\r\n        button: <Button icon=\"align-center\" text=\"Text alignment\" />,\r\n        parent,\r\n        id: \"text-alignment\",\r\n        showSiblings: true,\r\n    },\r\n    {\r\n        button: <Button icon=\"heading\" text=\"Heading\" />,\r\n        parent,\r\n        id: \"heading\",\r\n        showSiblings: true,\r\n    },\r\n    {\r\n        navigate: false,\r\n        button: <CssButton\r\n            data={{\r\n                icon: \"paragraph\",\r\n                text: \"Paragraph\",\r\n                style: {\r\n                    fontSize: \"12px\",\r\n                    padding: 0,\r\n                    fontWeight: \"normal\",\r\n                    letterSpacing: \"1px\",\r\n                }\r\n            }} />,\r\n        parent,\r\n        id: \"paragraph\",\r\n    },\r\n] as ToolbarButton[];\r\n","import React from \"react\";\r\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { CssData } from \"./types\";\r\nimport { CssButton } from \"../css-button\";\r\n\r\nconst parent = \"text-alignment\";\r\n\r\nconst alignmentData: { [key: string]: CssData } = {\r\n    \"justify\": {\r\n        icon: faAlignJustify,\r\n        text: \"Justify\",\r\n        style: {\r\n            textAlign: \"justify\",\r\n        },\r\n    },\r\n    \"left\": {\r\n        icon: faAlignLeft,\r\n        text: \"Left\",\r\n        style: {\r\n            textAlign: \"left\",\r\n        },\r\n    },\r\n    \"right\": {\r\n        icon: faAlignRight,\r\n        text: \"Right\",\r\n        style: {\r\n            textAlign: \"right\",\r\n        },\r\n    },\r\n    \"center\": {\r\n        icon: faAlignCenter,\r\n        text: \"Center\",\r\n        style: {\r\n            textAlign: \"center\",\r\n        },\r\n    },\r\n}\r\n\r\nexport const textAlignment = [\r\n    {\r\n        button: <CssButton data={alignmentData[\"justify\"]} />,\r\n        parent,\r\n        id: \"align-justify\",\r\n        navigate: false,\r\n    },\r\n    {\r\n        button: <CssButton data={alignmentData[\"left\"]} />,\r\n        parent,\r\n        id: \"align-left\",\r\n        navigate: false,\r\n    },\r\n    {\r\n        button: <CssButton data={alignmentData[\"center\"]} />,\r\n        parent,\r\n        id: \"align-center\",\r\n        navigate: false,\r\n    },\r\n    {\r\n        button: <CssButton data={alignmentData[\"right\"]} />,\r\n        parent,\r\n        id: \"align-right\",\r\n        navigate: false,\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport { faHeading } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { CssData } from \"./types\";\r\nimport { CssButton } from \"../css-button\";\r\n\r\nconst parent = \"heading\";\r\n\r\nconst headingData: {[key: string]: CssData} = {\r\n    \"h1\": {\r\n        icon: faHeading,\r\n        text: \"H1\",\r\n        style: {\r\n            fontSize: \"30px\",\r\n            padding: \"1em 0 1em 0\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    \"h2\": {\r\n        icon: faHeading,\r\n        text: \"H2\",\r\n        style: {\r\n            fontSize: \"22px\",\r\n            padding: \"0.8em 0 0.8em 0\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    \"h3\": {\r\n        icon: faHeading,\r\n        text: \"H3\",\r\n        style: {\r\n            fontSize: \"20px\",\r\n            padding: \"0.4em 0 0.4em 0\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    \"h4\": {\r\n        icon: faHeading,\r\n        text: \"H4\",\r\n        style: {\r\n            fontSize: \"12px\",\r\n            padding: \"0.2em 0 0.2em 0\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    \"h5\": {\r\n        icon: faHeading,\r\n        text: \"H5\",\r\n        style: {\r\n            fontSize: \"10px\",\r\n            padding: \"0 0 0 0\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n    \"h6\": {\r\n        icon: faHeading,\r\n        text: \"H6\",\r\n        style: {\r\n            fontSize: \"8px\",\r\n            padding: \"0 0 0 0\",\r\n            fontWeight: \"bold\",\r\n        },\r\n    },\r\n}\r\n\r\nexport const headings = [\r\n    {\r\n        button: <CssButton data={headingData[\"h1\"]} />,\r\n        parent,\r\n        id: \"heading-1\",\r\n    },\r\n    {\r\n        button: <CssButton data={headingData[\"h2\"]} />,\r\n        parent,\r\n        id: \"heading-2\",\r\n    },\r\n    {\r\n        button: <CssButton data={headingData[\"h3\"]} />,\r\n        parent,\r\n        id: \"heading-3\",\r\n    },\r\n    {\r\n        button: <CssButton data={headingData[\"h4\"]} />,\r\n        parent,\r\n        id: \"heading-4\",\r\n    },\r\n    {\r\n        button: <CssButton data={headingData[\"h5\"]} />,\r\n        parent,\r\n        id: \"heading-5\",\r\n    },\r\n    {\r\n        button: <CssButton data={headingData[\"h6\"]} />,\r\n        parent,\r\n        id: \"heading-6\",\r\n    },\r\n];\r\n","import { textMain } from \"./text\";\r\nimport { textAlignment } from \"./alignment\";\r\nimport { headings } from \"./headings\";\r\n\r\nexport const text = [\r\n    ...textMain,\r\n    ...textAlignment,\r\n    ...headings,\r\n];\r\n","import React from \"react\";\r\nimport { usePhotosReducer } from \"../../contexts/editor-context\";\r\n\r\nexport const PhotoList = () => {\r\n    const { state: { photos } } = usePhotosReducer();\r\n\r\n    return (\r\n        <>\r\n            {photos.map((p, index) => {\r\n                return (\r\n                    <img key={index} alt={p.title} src={p.thumbnailUrl} />\r\n                )\r\n            })\r\n            }\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"../button\";\r\nimport { faFilm } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebook, faGoogle, faInstagram, faFlickr } from '@fortawesome/free-brands-svg-icons';\r\nimport { PhotoList } from \"../photo-list\";\r\nimport { useCallback } from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { usePhotosReducer } from \"../../contexts/editor-context\";\r\nimport { useState } from \"react\";\r\nimport { Photo } from \"../../core/editor/types\";\r\n\r\nconst FilmrollButton = () => {\r\n    const { dispatch } = usePhotosReducer();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const {\r\n        navigateDown,\r\n    } = useToolbar();\r\n\r\n    const onClick = useCallback(() => {\r\n        setIsLoading(true);\r\n        fetch('https://jsonplaceholder.typicode.com/photos?albumId=6')\r\n            .then(response => response.json())\r\n            // Add some delay...\r\n            .then(json => new Promise<Photo[]>((resolve) => setTimeout(() => {\r\n                resolve(json);\r\n            }, 1000)))\r\n            .finally(() => setIsLoading(false))\r\n            .then(json => {\r\n                dispatch({\r\n                    type: \"add\",\r\n                    payload: json,\r\n                });\r\n                navigateDown(\"filmroll\");\r\n            })\r\n    }\r\n        , [dispatch, navigateDown]);\r\n\r\n    return (\r\n        <Button\r\n            icon={faFilm}\r\n            text={isLoading ? \"Loading...\" : \"Film roll\"}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n};\r\n\r\nconst parent = \"photo\";\r\nexport const photoToolbar = [\r\n    {\r\n        button: <FilmrollButton />,\r\n        content: <PhotoList />,\r\n        id: \"filmroll\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faFacebook} text=\"Facebook\" />,\r\n        id: \"facebook\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faGoogle} text=\"Google\" />,\r\n        id: \"google\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faFlickr} text=\"Flickr\" />,\r\n        id: \"flickr\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faInstagram} text=\"Instagram\" />,\r\n        id: \"instagram\",\r\n        parent,\r\n    },\r\n];","import React from \"react\";\r\nimport { faCameraRetro, faQuoteRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Button } from \"../button\";\r\nimport { text } from \"./text\";\r\nimport { photoToolbar } from \"./photo-toolbar\";\r\n\r\nexport const editorToolbar = [\r\n    {\r\n        button: <Button icon={faCameraRetro} text=\"Photo\" />,\r\n        id: \"photo\",\r\n    },\r\n    {\r\n        button: <Button icon={faQuoteRight} text=\"Text\" />,\r\n        id: \"text\",\r\n    },\r\n    ...text,\r\n    ...photoToolbar,\r\n];","import React from \"react\";\r\n\r\nimport { Editor } from \"../editor/editor\";\r\nimport { Layout } from \"../layout\";\r\nimport { useEffect } from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { editorToolbar } from \"../editor-toolbar\";\r\nimport { useHtmlReducer } from \"../../contexts/editor-context\";\r\nimport { HtmlData } from \"../../core/editor/types\";\r\n\r\n\r\nconst html = [\r\n    {\r\n        id: \"1\",\r\n        tag: \"h1\",\r\n        content: \"Heading 1\",\r\n        style: {\r\n            textAlign: \"left\",\r\n            fontSize: \"28px\",\r\n            letterSpacing: \"1px\",\r\n        },\r\n    },\r\n    {\r\n        id: \"2\",\r\n        tag: \"h2\",\r\n        content: \"Heading 2\",\r\n        style: {\r\n            textAlign: \"left\",\r\n            fontSize: \"22px\",\r\n            letterSpacing: \"1px\",\r\n        },\r\n    },\r\n    {\r\n        id: \"3\",\r\n        tag: \"h3\",\r\n        content: \"Heading 3\",\r\n        style: {\r\n            textAlign: \"left\",\r\n            fontSize: \"18px\",\r\n            letterSpacing: \"1px\",\r\n        },\r\n    },\r\n] as HtmlData[];\r\n\r\nexport const EditorScreen = () => {\r\n    const {\r\n        reset,\r\n    } = useToolbar();\r\n\r\n    const { state, dispatch } = useHtmlReducer();\r\n    const { defaultStyle } =  state;\r\n\r\n    useEffect(() => {\r\n        reset(editorToolbar);\r\n        return () => {\r\n            reset([]);\r\n        };\r\n    }, [reset]);\r\n\r\n    useEffect(() => {\r\n        Promise.resolve(html)\r\n            .then(fetchedHtml => {\r\n                dispatch({\r\n                    type: 'request-html-success',\r\n                    data: fetchedHtml.map(html => {\r\n                        const style = { ...defaultStyle, ...html.style };\r\n                        return { ...html, style };\r\n                    }),\r\n                })\r\n            });\r\n    }, [defaultStyle, dispatch]);\r\n\r\n    return (\r\n            <Layout>\r\n                <Editor />\r\n            </Layout>\r\n    );\r\n};\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCoffee,\n  faJedi,\n  faRobot,\n  faUserAstronaut,\n  faFish,\n  faPizzaSlice,\n  faStroopwafel,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { HomeScreen } from './components/home-screen';\nimport { TodosScreen } from './components/todos-screen';\nimport { EditorScreen } from './components/editor-screen';\nimport { EditorContextProvider } from './contexts/editor-context';\n\nlibrary.add(faCoffee,\n  faJedi,\n  faRobot,\n  faUserAstronaut,\n  faFish,\n  faPizzaSlice,\n  faStroopwafel,\n);\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <EditorContextProvider>\n        <Switch>\n          <Route path=\"/todos\">\n            <TodosScreen />\n          </Route>\n          <Route path=\"/editor\">\n            <EditorScreen />\n          </Route>\n          <Route path=\"/\">\n            <HomeScreen />\n          </Route>\n        </Switch>\n      </EditorContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { NavigationProvider } from './contexts/toolbar-context';\nimport { TodoProvider } from './contexts/todo-context';\nimport { ViewContextProvider } from './contexts/view-context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ViewContextProvider>\n      <TodoProvider>\n        <NavigationProvider\n          paths={[]}\n        >\n          <App />\n        </NavigationProvider>\n      </TodoProvider>\n    </ViewContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}