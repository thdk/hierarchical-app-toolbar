{"version":3,"sources":["contexts/toolbar-context/toolbar-context.tsx","components/toolbar-breadcrumbs/toolbar-breadcrumbs.tsx","contexts/view-context/view-context.tsx","components/top-bar/top-bar.tsx","components/toolbar-item/toolbar-item.tsx","components/toolbar/toolbar.tsx","components/menu/menu.tsx","components/toolbar/toolbar-siblings.tsx","components/layout/layout.tsx","components/home-screen/home-screen.tsx","contexts/todo-context/todo-context.tsx","components/todo-list/todo-list.tsx","components/button/button.tsx","components/todo-filters/todo-filters.tsx","components/todo-toolbar/recipes.tsx","components/todo-toolbar/todo-toolbar.tsx","components/todos-screen/todos-screen.tsx","components/text/text.tsx","core/editor/reducer/editor-reducer.ts","contexts/editor-context/editor-context.tsx","components/editor/editor.tsx","components/slider/slider.tsx","core/editor/selector/editor-selector.ts","components/editor-toolbar/text/font-size.tsx","components/editor-toolbar/text/text.tsx","components/editor-toolbar/text/alignment.tsx","components/editor-toolbar/text/index.ts","components/photo-list/photo-list.tsx","components/editor-toolbar/photo-toolbar.tsx","components/editor-toolbar/editor-toolbar.tsx","components/editor-screen/editor-screen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getBreadcrumbs","paths","current","includeCurrent","navigation","get","parent","undefined","breadcrumbs","isChildOf","path","currentPath","ToolbarContext","React","createContext","NavigationProvider","children","useState","toolbarTrail","setToolbarTrail","toolbarContent","setToolbarcontent","activePath","setActivePath","Map","toolbarPaths","setToolbarPaths","length","allPaths","Array","from","values","filter","Error","siblings","find","p","id","navigate","useCallback","options","allowChild","nextNavigation","action","isValidElement","some","navigateUp","steps","splice","navigateDown","indexOf","reset","items","map","toolbarContext","navigationContent","navigationTrail","Provider","value","useToolbar","useContext","Seperator","isLast","NavigationBreadcrumbs","className","item","index","key","onClick","e","preventDefault","onBackClick","href","ViewContext","ViewContextProvider","isMenuOpen","setIsMenuOpen","context","toggleMenu","closeMenu","useViewContext","library","add","faChevronLeft","faEllipsisV","faBars","faQuestion","TopBarNavigation","icon","TopBarActions","TopBar","cssClass","classNames","ToolbarItem","itemId","isActive","bind","Toolbar","button","Menu","to","ToolbarSiblings","Layout","HomeScreen","TodoContext","TodoProvider","completed","todoFilter","setTodoFilter","todos","setTodos","filteredTodos","setFilteredTodos","toggleCompleted","useEffect","todo","useTodos","TodoList","fetch","then","response","json","console","log","title","Button","text","restProps","TodoFilterCompleted","type","checked","onChange","recipes","todoToolbar","faListUl","faRobot","faUtensils","TodosScreen","Text","tag","Tag","htmlReducer","state","data","findIndex","i","updatedItem","slice","defaultStyleReducer","htmlSelectionReducer","editorReducer","selectedId","defaultStyle","EditorContext","EditorContextProvider","useReducer","textAlign","fontSize","dispatch","contextValue","useMemo","useEditorReducer","Editor","style","content","Slider","min","max","selectSelectedHtmlData","faAlignCenter","faAlignJustify","faAlignLeft","faAlignRight","FontSizeSlider","html","selectedHtml","target","replace","faHeading","faTextWidth","faTextHeight","faParagraph","textMain","alignmentData","AlignmentButton","alignment","alignmentStyle","buttonStyle","fontWeight","Object","keys","every","textAlignment","PhotoList","photos","setPhotos","alt","src","thumbnailUrl","photoToolbar","faFilm","faFacebook","faGoogle","faFlickr","faInstagram","editorToolbar","faCameraRetro","faQuoteRight","EditorScreen","Promise","resolve","fetchedHtml","faCoffee","faJedi","faUserAstronaut","faFish","faPizzaSlice","faStroopwafel","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1964699c.chunk.js","sourcesContent":["import React, { useState, useCallback, isValidElement } from \"react\";\r\n\r\nexport type NavigatorItem = {\r\n    button: React.ReactNode;\r\n    action?: React.ReactNode | (() => void);\r\n    parent?: string;\r\n    id: string;\r\n}\r\n\r\ntype NavigateOptions = {\r\n    allowChild?: boolean,\r\n};\r\n\r\nexport interface ToolbarContext {\r\n    activePath?: string;\r\n    navigateDown: (id: string) => void,\r\n    navigateUp: (steps?: number) => void,\r\n    navigate: (id: string, options?: NavigateOptions) => void,\r\n    navigation: NavigatorItem[],\r\n    siblings: NavigatorItem[],\r\n    navigationContent: React.ReactNode | (() => void),\r\n    navigationTrail: (string | undefined)[],\r\n    reset: (items: NavigatorItem[]) => void,\r\n}\r\n\r\nfunction getBreadcrumbs(\r\n    paths: Map<string, NavigatorItem>,\r\n    current: string,\r\n    { includeCurrent = true } = {},\r\n): (string | undefined)[] {\r\n    const navigation = paths.get(current);\r\n    if (!navigation || !navigation.parent) {\r\n        return includeCurrent\r\n            ? [undefined, current]\r\n            : [undefined];\r\n    }\r\n\r\n    const breadcrumbs = getBreadcrumbs(paths, navigation.parent, {\r\n        includeCurrent: true\r\n    });\r\n\r\n    return includeCurrent\r\n        ? [...breadcrumbs, current]\r\n        : breadcrumbs;\r\n}\r\n\r\nfunction isChildOf(path: string, currentPath: string | undefined, paths: Map<string, NavigatorItem>): boolean {\r\n    if (!currentPath) {\r\n        return false;\r\n    }\r\n\r\n    const current = paths.get(currentPath);\r\n\r\n    if (!current) {\r\n        return false;\r\n    }\r\n\r\n    if (!current.parent) {\r\n        return false;\r\n    }\r\n\r\n    if (current.parent && current.parent === path) {\r\n        return true;\r\n    }\r\n\r\n    return isChildOf(path, current.parent, paths);\r\n}\r\n\r\nconst ToolbarContext = React.createContext({} as ToolbarContext);\r\n\r\nexport const NavigationProvider = ({\r\n    children,\r\n}: React.PropsWithChildren<{\r\n    paths: NavigatorItem[],\r\n}>) => {\r\n    const [toolbarTrail, setToolbarTrail] = useState<(string | undefined)[]>([undefined]);\r\n    const [toolbarContent, setToolbarcontent] = useState<React.ReactNode | undefined>(undefined);\r\n    const [activePath, setActivePath] = useState<string | undefined>(undefined);\r\n\r\n    const [toolbarPaths, setToolbarPaths] = useState<Map<string, NavigatorItem>>(\r\n        new Map(),\r\n    );\r\n\r\n    const currentPath = toolbarTrail.length > 1\r\n        ? toolbarTrail[toolbarTrail.length - 1]\r\n        : undefined;\r\n\r\n    const allPaths = Array.from(toolbarPaths.values());\r\n    const navigation = allPaths\r\n        .filter(path => path.parent === currentPath);\r\n\r\n    if (!navigation) {\r\n        throw new Error(\"No navigation items have been set up\");\r\n    }\r\n\r\n    let siblings: NavigatorItem[] = [];\r\n    const current = allPaths.find(p => p.id === currentPath);\r\n    if (current && current.parent) {\r\n        siblings = allPaths.filter(p => p.parent === current.parent);\r\n    }\r\n\r\n    const navigate = useCallback((path: string, options: NavigateOptions = {}) => {\r\n        if (path === activePath) return;\r\n\r\n        if (options.allowChild && isChildOf(path, activePath, toolbarPaths)) {\r\n            return;\r\n        }\r\n\r\n        setActivePath(path);\r\n        const nextNavigation = toolbarPaths.get(path);\r\n        if (!nextNavigation) {\r\n            throw new Error(\"No navigation items have been set up\");\r\n        }\r\n\r\n        const { action } = nextNavigation;\r\n\r\n        if (isValidElement(action)) {\r\n            setToolbarcontent(action);\r\n        } else {\r\n            setToolbarcontent(undefined);\r\n        }\r\n\r\n        setToolbarTrail(\r\n            getBreadcrumbs(\r\n                toolbarPaths,\r\n                path,\r\n                {\r\n                    includeCurrent: Array.from(toolbarPaths.values()).some(p => p.parent === path),\r\n                },\r\n            ),\r\n        );\r\n    }, [toolbarPaths, activePath]);\r\n\r\n    const navigateUp = useCallback((steps = 1) => {\r\n        if (toolbarTrail && toolbarTrail.length > steps) {\r\n            toolbarTrail.splice(-1, steps);\r\n            setToolbarTrail([...toolbarTrail]);\r\n            setToolbarcontent(undefined);\r\n            setActivePath(undefined);\r\n        }\r\n    }, [toolbarTrail]);\r\n\r\n    const navigateDown = useCallback((parent: string) => {\r\n        if (toolbarTrail.indexOf(parent) !== -1) {\r\n            navigateUp();\r\n        } else if (parent === activePath) {\r\n            setActivePath(undefined);\r\n            setToolbarcontent(undefined);\r\n        } else {\r\n            navigate(parent);\r\n        }\r\n\r\n    }, [activePath, navigate, navigateUp, toolbarTrail]);\r\n\r\n    const reset = useCallback((items: NavigatorItem[]) => {\r\n        setActivePath(undefined);\r\n        setToolbarPaths(new Map(items.map(path => [path.id, path])));\r\n        setToolbarcontent(undefined);\r\n        setToolbarTrail([undefined]);\r\n    }, [setToolbarcontent]);\r\n\r\n    const toolbarContext = {\r\n        activePath,\r\n        navigate,\r\n        navigateDown,\r\n        navigateUp,\r\n        navigation,\r\n        navigationContent: toolbarContent,\r\n        navigationTrail: toolbarTrail,\r\n        reset,\r\n        siblings,\r\n    };\r\n    return (\r\n        <ToolbarContext.Provider value={toolbarContext}>\r\n            {children}\r\n        </ToolbarContext.Provider>\r\n    )\r\n};\r\n\r\nexport const useToolbar = () => {\r\n    return React.useContext(ToolbarContext);\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\n\r\nimport \"./toolbar-breadcrumbs.css\";\r\n\r\nconst Seperator = ({ isLast = false }: { isLast?: boolean }) => {\r\n    return isLast\r\n        ? <></>\r\n        : <span> - </span>;\r\n};\r\n\r\nexport const NavigationBreadcrumbs = () => {\r\n    const {\r\n        navigateUp,\r\n        navigationTrail,\r\n    } = useToolbar();\r\n\r\n\r\n    const onBackClick = (e: React.MouseEvent, steps = 1) => {\r\n        e.preventDefault();\r\n        navigateUp(steps);\r\n    };\r\n\r\n    return (\r\n        <div className=\"navigation-breadcrumbs\">\r\n            {navigationTrail.map((item, index) => {\r\n                const isLast = index === navigationTrail.length - 1;\r\n                return (\r\n                    <span key={index}>\r\n                        {isLast\r\n                            ? <span>{item || \"Main\"}</span>\r\n                            : <a // eslint-disable-line jsx-a11y/anchor-is-valid\r\n                                onClick={e => onBackClick(e, navigationTrail.length - 1 - index)}\r\n                                href=\"#\"\r\n                            >\r\n                                {item || \"Main\"}\r\n                            </a>\r\n                        }\r\n                        <Seperator\r\n                            isLast={isLast}\r\n                        />\r\n                    </span>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\ntype ViewContextProps = {\r\n    isMenuOpen: boolean;\r\n    toggleMenu: () => void;\r\n    closeMenu: () => void;\r\n}\r\n\r\nconst ViewContext = React.createContext({} as ViewContextProps);\r\n\r\nexport const ViewContextProvider = ({\r\n    children,\r\n}: React.PropsWithChildren<{}>) => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n    const context = {\r\n        isMenuOpen,\r\n        toggleMenu: () => setIsMenuOpen(!isMenuOpen),\r\n        closeMenu: () => setIsMenuOpen(false),\r\n    };\r\n\r\n    return (\r\n        <ViewContext.Provider value={context}>\r\n            {children}\r\n        </ViewContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useViewContext = () => {\r\n    return React.useContext(ViewContext);\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faChevronLeft, faBars, faEllipsisV, faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { NavigationBreadcrumbs } from \"../toolbar-breadcrumbs\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { useViewContext } from \"../../contexts/view-context\";\r\nimport \"./top-bar.css\";\r\n\r\nlibrary.add(faChevronLeft, faEllipsisV, faBars, faQuestion);\r\n\r\nconst TopBarNavigation = () => {\r\n    const {\r\n        navigationTrail,\r\n        navigateUp,\r\n    } = useToolbar();\r\n\r\n    const { toggleMenu } = useViewContext();\r\n\r\n    return (\r\n        navigationTrail.length > 1\r\n            ? <FontAwesomeIcon\r\n                icon=\"chevron-left\"\r\n                onClick={() => navigateUp()}\r\n            />\r\n            : <FontAwesomeIcon\r\n                icon={faBars}\r\n                onClick={toggleMenu}\r\n            />\r\n    );\r\n}\r\n\r\nconst TopBarActions = () => {\r\n    const {\r\n        navigationTrail,\r\n    } = useToolbar();\r\n\r\n    return (\r\n        navigationTrail.length > 1\r\n            ? <FontAwesomeIcon\r\n                icon=\"question\"\r\n            />\r\n            : <FontAwesomeIcon\r\n                icon={\"ellipsis-v\"}\r\n            />\r\n    );\r\n}\r\n\r\nexport const TopBar = () => {\r\n    const {\r\n        navigationTrail,\r\n    } = useToolbar();\r\n\r\n    const cssClass = classNames([\r\n        \"top-bar\",\r\n        {\r\n            \"top-bar--contextual\": navigationTrail.length > 1,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div className={cssClass}>\r\n            <div className=\"top-bar__left\">\r\n                <TopBarNavigation />\r\n            </div>\r\n\r\n            <div className=\"top-bar__center\">\r\n                <NavigationBreadcrumbs />\r\n            </div>\r\n\r\n            <div className=\"top-bar__right\">\r\n                <TopBarActions />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\n\r\nimport \"./navigation-item.css\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const ToolbarItem = ({\r\n    itemId,\r\n    children,\r\n    isActive = false,\r\n}: React.PropsWithChildren<{\r\n    itemId: string,\r\n    isActive?: boolean,\r\n}>) => {\r\n    const {\r\n        navigateDown,\r\n    } = useToolbar();\r\n\r\n    const cssClass = classNames([\r\n        \"navigation-item\",\r\n        {\r\n            \"navigation-item--active\": isActive,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            onClick={navigateDown.bind(null, itemId)}\r\n            className={cssClass}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { ToolbarItem } from \"../toolbar-item\";\r\n\r\nimport \"./toolbar.css\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const Toolbar = () => {\r\n    const {\r\n        activePath,\r\n        navigationContent,\r\n        navigation,\r\n    } = useToolbar();\r\n\r\n    const cssClass = classNames([\r\n        \"toolbar\",\r\n        {\r\n            \"toolbar--closed\": !navigation.length,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div className={cssClass}>\r\n            {\r\n                navigationContent ?\r\n                    <div className=\"toolbar__content\">\r\n                        {navigationContent}\r\n                    </div>\r\n                    : null\r\n            }\r\n\r\n            <div className=\"toolbar__items\">\r\n                {\r\n                    navigation.map(({ button, id, action }) => (\r\n                        <ToolbarItem\r\n                            key={id}\r\n                            itemId={id}\r\n                            isActive={!!action && activePath === id}\r\n                        >\r\n                            {button}\r\n                        </ToolbarItem>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./menu.css\";\r\nimport { useViewContext } from \"../../contexts/view-context\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const Menu = () => {\r\n    const { isMenuOpen } = useViewContext();\r\n\r\n    const { closeMenu } = useViewContext();\r\n\r\n    const onClick = useCallback((e: React.MouseEvent) => {\r\n        closeMenu();\r\n    }, [closeMenu]);\r\n\r\n    const cssClass = classNames([\r\n        \"menu\",\r\n        {\r\n            \"menu--open\": isMenuOpen,\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <div className={cssClass}>\r\n            <Link to=\"/\" onClick={onClick}>Home</Link>\r\n            <Link to=\"/editor\" onClick={onClick}>Editor</Link>\r\n            <Link to=\"/todos\" onClick={onClick}>To do</Link>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { ToolbarItem } from \"../toolbar-item\";\r\n\r\nexport const ToolbarSiblings = () => {\r\n    const {\r\n        navigationTrail,\r\n        siblings,\r\n     } = useToolbar();\r\n\r\n    return siblings.length\r\n        ? (\r\n            <div className=\"toolbar-siblings\">\r\n                {\r\n                    siblings.map(({ button, id }) => (\r\n                        <ToolbarItem\r\n                            key={id}\r\n                            itemId={id}\r\n                            isActive={navigationTrail.indexOf(id) !== -1}\r\n                        >\r\n                            {button}\r\n                        </ToolbarItem>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n        : <></>;\r\n};\r\n","import React, { PropsWithChildren } from \"react\";\r\nimport { TopBar } from \"../top-bar\";\r\nimport { Toolbar } from \"../toolbar\";\r\nimport { Menu } from \"../menu\";\r\n\r\nimport \"./layout.css\";\r\nimport { ToolbarSiblings } from \"../toolbar/toolbar-siblings\";\r\n\r\nexport const Layout = ({\r\n    children,\r\n}: PropsWithChildren<{}>) => {\r\n    return (\r\n        <div className=\"app\">\r\n            <TopBar />\r\n            <aside>\r\n            <Menu />\r\n            </aside>\r\n            <div className=\"app__body\">\r\n                {children}\r\n            </div>\r\n            <Toolbar />\r\n            <ToolbarSiblings/>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"../layout\";\r\n\r\nexport const HomeScreen = () => {\r\n    return (\r\n        <Layout>\r\n            Home\r\n        </Layout>\r\n    );\r\n};\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nexport interface ITodo {\r\n    userId: number,\r\n    id: number,\r\n    title: string,\r\n    completed: boolean\r\n}\r\n\r\ntype TodoContextType = {\r\n    todos: ITodo[],\r\n    toggleCompleted: () => void;\r\n    setTodos: (todos: ITodo[]) => void;\r\n    filter: {\r\n        completed: boolean;\r\n    }\r\n};\r\n\r\nconst TodoContext = React.createContext({} as TodoContextType);\r\n\r\nexport const TodoProvider = ({\r\n    children,\r\n}: React.PropsWithChildren<{}>) => {\r\n    const [todoFilter, setTodoFilter] = useState({\r\n        completed: true,\r\n    });\r\n\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n    const [filteredTodos, setFilteredTodos] = useState<ITodo[]>([]);\r\n\r\n    const toggleCompleted = useCallback(() => {\r\n        setTodoFilter({ ...todoFilter, completed: !todoFilter.completed });\r\n    }, [todoFilter]);\r\n\r\n    useEffect(() => {\r\n        setFilteredTodos(todoFilter.completed ? todos.filter(todo => !todo.completed) : todos);\r\n    }, [todoFilter, setFilteredTodos, todos]);\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            todos: filteredTodos,\r\n            toggleCompleted,\r\n            setTodos,\r\n            filter: todoFilter,\r\n        }}\r\n        >\r\n            {children}\r\n        </TodoContext.Provider>\r\n    )\r\n};\r\n\r\nexport const useTodos = () => {\r\n    return React.useContext(TodoContext);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTodos } from \"../../contexts/todo-context\";\r\n\r\nexport const TodoList = () => {\r\n    const {\r\n        todos,\r\n        setTodos,\r\n    } = useTodos();\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/todos')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log({ json });\r\n                setTodos(json);\r\n            });\r\n\r\n    }, [setTodos]);\r\n\r\n    if (!todos) return <></>;\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {\r\n                todos\r\n                    .map((todo, index) => {\r\n                        return (\r\n                            <div\r\n                                className=\"todo\"\r\n                                key={todo.id + index}\r\n                            >\r\n                                {todo.completed ? \"V\" : \"X\"}\r\n                        -\r\n                                {todo.title}\r\n                            </div>\r\n                        );\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport \"./button.css\";\r\n\r\nexport const Button = ({\r\n    text,\r\n    icon,\r\n    ...restProps\r\n}: {\r\n    text: string,\r\n    icon: IconProp,\r\n} & React.HTMLProps<HTMLDivElement>) => {\r\n    return (\r\n        <div\r\n            className=\"button\"\r\n            {...restProps}\r\n        >\r\n            <FontAwesomeIcon\r\n                className=\"button__icon\"\r\n                icon={icon}\r\n            />\r\n            <span\r\n                className=\"navigation-button__text\"\r\n            >\r\n                {text}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useTodos } from \"../../contexts/todo-context\";\r\n\r\nimport \"./todo-filters.css\";\r\n\r\nexport const TodoFilterCompleted = () => {\r\n    const { toggleCompleted, filter: { completed } } = useTodos();\r\n\r\n    return (\r\n        <div\r\n            className=\"todo-filter todo-filter-completed\"\r\n        >\r\n            <label>Hide completed todos</label>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={toggleCompleted}\r\n            ></input>\r\n        </div>\r\n    )\r\n};","import { Button } from \"../button\";\r\nimport React from \"react\";\r\n\r\nconst parent = \"recipes\";\r\nexport const recipes = [\r\n    {\r\n        button: <Button icon=\"fish\" text=\"Great fish\" />,\r\n        parent,\r\n        id: \"fish\",\r\n    },\r\n    {\r\n        button: <Button icon=\"stroopwafel\" text=\"Belgian waffle\" />,\r\n        parent,\r\n        id: \"waffle\",\r\n    },\r\n    {\r\n        button: <Button icon=\"pizza-slice\" text=\"Pizza\" />,\r\n        parent,\r\n        id: \"pizza\",\r\n    },\r\n]","import { Button } from \"../button\";\r\nimport React from \"react\";\r\nimport { TodoFilterCompleted } from \"../todo-filters\";\r\nimport { recipes } from \"./recipes\";\r\nimport { faRobot, faUtensils, faListUl } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const todoToolbar = [\r\n    {\r\n        button: <Button icon={faListUl} text=\"To do\" />,\r\n        action: <TodoFilterCompleted />,\r\n        id: \"to do\",\r\n    },\r\n    {\r\n        button: <Button icon={faRobot} text=\"Space robot\" />,\r\n        action: <p>\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n                </p>,\r\n        id: \"robot\",\r\n    },\r\n    {\r\n        button: <Button icon={faUtensils} text=\"Recipes\" />,\r\n        id: \"recipes\",\r\n    },\r\n    ...recipes,\r\n];\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { TodoList } from \"../todo-list\";\r\nimport { Layout } from \"../layout\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { todoToolbar } from \"../todo-toolbar\";\r\n\r\nexport const TodosScreen = () => {\r\n    const {\r\n        reset,\r\n    } = useToolbar();\r\n    useEffect(() => {\r\n        reset(todoToolbar);\r\n        return () => {\r\n            reset([]);\r\n        };\r\n    }, [reset]);\r\n\r\n    return (\r\n            <Layout>\r\n                <TodoList />\r\n            </Layout>\r\n    );\r\n}\r\n","import React, { PropsWithChildren, HTMLProps } from \"react\";\r\nimport { HtmlTag } from \"../../core/editor/types\";\r\n\r\nexport const Text = ({\r\n    children,\r\n    tag: Tag = \"p\",\r\n    ...restProps\r\n}: PropsWithChildren<{\r\n    tag: HtmlTag,\r\n}> & HTMLProps<any>) => {\r\n    return (\r\n        <Tag {...restProps}>\r\n            {children}\r\n        </Tag>\r\n    );\r\n};\r\n","import { HtmlData } from \"../types\";\r\n\r\nexport type EditorState = {\r\n    data: HtmlData[];\r\n    selectedId: string | undefined;\r\n    defaultStyle: HtmlData[\"style\"];\r\n}\r\n\r\nexport type EditorAction =\r\n    | { type: 'update-html', data: Partial<HtmlData>, id: string }\r\n    | { type: 'add-html', data: HtmlData }\r\n    | { type: 'select-html', data: string | undefined }\r\n    | { type: 'set-default-style', data: HtmlData[\"style\"] }\r\n    | { type: 'request-html' }\r\n    | { type: 'request-html-success', data: HtmlData[] }\r\n    ;\r\n\r\nexport function htmlReducer(state: HtmlData[], action: EditorAction): HtmlData[] {\r\n    switch (action.type) {\r\n        case 'request-html-success':{\r\n            return action.data;\r\n        }\r\n        case 'update-html': {\r\n            const index = state.findIndex(i => i.id === action.id);\r\n            const updatedItem = { ...state[index], ...action.data };\r\n            return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n        }\r\n        case 'add-html':\r\n            return [...state, action.data];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function defaultStyleReducer(state: HtmlData[\"style\"], action: EditorAction): HtmlData[\"style\"] {\r\n    switch (action.type) {\r\n        case 'set-default-style':\r\n            return action.data;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport function htmlSelectionReducer(state: string | undefined, action: EditorAction): string | undefined {\r\n    switch (action.type) {\r\n        case 'select-html':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function editorReducer(state: EditorState, action: EditorAction): EditorState {\r\n    return {\r\n        data: htmlReducer(state.data, action),\r\n        selectedId: htmlSelectionReducer(state.selectedId, action),\r\n        defaultStyle: defaultStyleReducer(state.defaultStyle, action),\r\n    };\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { editorReducer, EditorState, EditorAction } from \"../../core/editor/reducer\";\r\n\r\nexport const EditorContext = React.createContext({} as { state: EditorState, dispatch: React.Dispatch<EditorAction> });\r\n\r\nexport const EditorContextProvider = ({ children }: React.PropsWithChildren<{}>) => {\r\n    const [state, dispatch] = useReducer<typeof editorReducer>(editorReducer, {\r\n        data: [],\r\n        selectedId: undefined,\r\n        defaultStyle: {\r\n            textAlign: \"left\",\r\n            fontSize: \"10px\",\r\n        }\r\n    });\r\n\r\n    const contextValue = useMemo(() => {\r\n        return { state, dispatch };\r\n    }, [state, dispatch]);\r\n\r\n    return (\r\n        <EditorContext.Provider value={contextValue}>\r\n            {children}\r\n        </EditorContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useEditorReducer = () => React.useContext(EditorContext);","import React from \"react\";\r\n\r\nimport \"./editor.css\";\r\nimport { useCallback } from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { Text } from \"../text\";\r\nimport { useEditorReducer } from \"../../contexts/editor-context\";\r\n\r\nexport const Editor = () => {\r\n    const {\r\n        navigate,\r\n    } = useToolbar();\r\n\r\n    const {\r\n        state,\r\n        dispatch\r\n    } = useEditorReducer();\r\n\r\n    const onClick = useCallback((id: string) => {\r\n        navigate(\"text\", { allowChild: true });\r\n        dispatch({\r\n            type: \"select-html\",\r\n            data: id,\r\n        })\r\n    }, [navigate, dispatch]);\r\n\r\n    return (\r\n        <div\r\n            className=\"editor\"\r\n        >\r\n            <p>Click the text below to select and start editing</p>\r\n            <p>(Only text height and text alignment are implemented)</p>\r\n            {state.data.map(i => {\r\n                return (\r\n                    <Text\r\n                        key={i.id}\r\n                        tag={i.tag}\r\n                        onClick={onClick.bind(null, i.id)}\r\n                        className={state.selectedId === i.id ? \"active\" : undefined}\r\n                        style={i.style}\r\n                    >\r\n                        {i.content}\r\n                    </Text>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { HTMLProps } from \"react\";\r\n\r\nimport \"./slider.css\";\r\n\r\nexport const Slider = ({\r\n    min,\r\n    max,\r\n    value,\r\n    ...restProps\r\n}: {\r\n    min: number,\r\n    max: number,\r\n    value: number,\r\n}  & HTMLProps<HTMLInputElement>) => {\r\n\r\n    return (\r\n        <div className=\"slider\">\r\n            <input\r\n                min={min}\r\n                max={max}\r\n                type=\"range\"\r\n                value={value}\r\n                {...restProps}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { EditorState } from \"../reducer\";\r\nimport { HtmlData } from \"../types\";\r\n\r\nexport function selectSelectedHtmlData(state: EditorState): HtmlData | undefined {\r\n    const id = state.selectedId;\r\n\r\n    if (!id) return undefined;\r\n\r\n    return state.data.find(i => i.id === id);\r\n}\r\n","import React from \"react\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEditorReducer } from \"../../../contexts/editor-context\";\r\nimport { useCallback } from \"react\";\r\nimport { selectSelectedHtmlData } from \"../../../core/editor/selector\";\r\nimport { Slider } from \"../../slider\";\r\n\r\nlibrary.add(faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight);\r\n\r\nexport const FontSizeSlider = () => {\r\n    const { state, dispatch } = useEditorReducer();\r\n    const html = selectSelectedHtmlData(state);\r\n    const onChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const selectedHtml = selectSelectedHtmlData(state);\r\n        if (!selectedHtml) {\r\n            return;\r\n        }\r\n\r\n        const { style, id } = selectedHtml;\r\n\r\n        dispatch({\r\n            type: \"update-html\",\r\n            data: {\r\n                style: {\r\n                    ...style,\r\n                    fontSize: e.target.value + \"px\",\r\n                },\r\n            },\r\n            id,\r\n        },\r\n        )\r\n    }, [dispatch, state]);\r\n\r\n\r\n    if (!html) {\r\n        return null;\r\n    }\r\n\r\n    const { style } = html;\r\n\r\n    const fontSize = +(style.fontSize || \"\").replace(/[A-Za-z]/g, '');\r\n\r\n    return (\r\n        <Slider\r\n            onChange={onChange}\r\n            min={1}\r\n            max={50}\r\n            value={fontSize}\r\n        />\r\n    );\r\n};\r\n","import { Button } from \"../../button\";\r\nimport React from \"react\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faHeading, faTextWidth, faTextHeight, faParagraph, faAlignCenter } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Slider } from \"../../slider\";\r\nimport { FontSizeSlider } from \"./font-size\";\r\n\r\nlibrary.add(faHeading, faTextWidth, faTextHeight, faParagraph, faAlignCenter);\r\n\r\nconst parent = \"text\";\r\nexport const textMain = [\r\n    {\r\n        button: <Button icon=\"text-width\" text=\"Text width\" />,\r\n        action: <Slider min={1} max={30} value={13} />,\r\n        parent,\r\n        id: \"text-width\",\r\n    },\r\n    {\r\n        button: <Button icon=\"text-height\" text=\"Text height\" />,\r\n        action: <FontSizeSlider />,\r\n        parent,\r\n        id: \"text-height\",\r\n    },\r\n    {\r\n        button: <Button icon=\"align-center\" text=\"Text alignment\" />,\r\n        parent,\r\n        id: \"text-alignment\",\r\n    },\r\n    {\r\n        button: <Button icon=\"heading\" text=\"Heading\" />,\r\n        parent,\r\n        id: \"heading\",\r\n    },\r\n    {\r\n        button: <Button icon=\"paragraph\" text=\"Paragraph\" />,\r\n        parent,\r\n        id: \"paragraph\",\r\n    },\r\n];\r\n","import React, { CSSProperties, useCallback } from \"react\";\r\nimport { library, IconProp } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Button } from \"../../button\";\r\nimport { useEditorReducer } from \"../../../contexts/editor-context\";\r\nimport { selectSelectedHtmlData } from \"../../../core/editor/selector\";\r\nimport { HtmlData } from \"../../../core/editor/types\";\r\n\r\nlibrary.add(faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight);\r\n\r\nconst parent = \"text-alignment\";\r\n\r\nconst alignmentData: { [key: string]: { icon: IconProp, text: string, style: Partial<HtmlData[\"style\"]> } } = {\r\n    \"justify\": {\r\n        icon: \"align-justify\",\r\n        text: \"Justify\",\r\n        style: {\r\n            textAlign: \"justify\",\r\n        },\r\n    },\r\n    \"left\": {\r\n        icon: \"align-left\",\r\n        text: \"Left\",\r\n        style: {\r\n            textAlign: \"left\",\r\n        },\r\n    },\r\n    \"right\": {\r\n        icon: \"align-right\",\r\n        text: \"Right\",\r\n        style: {\r\n            textAlign: \"right\",\r\n        },\r\n    },\r\n    \"center\": {\r\n        icon: \"align-center\",\r\n        text: \"Center\",\r\n        style: {\r\n            textAlign: \"center\",\r\n        },\r\n    },\r\n}\r\n\r\nconst AlignmentButton = ({\r\n    alignment\r\n}: {\r\n    alignment: keyof typeof alignmentData;\r\n}) => {\r\n    const { state, dispatch } = useEditorReducer();\r\n    const { icon, text, style: alignmentStyle } = alignmentData[alignment];\r\n    const current = selectSelectedHtmlData(state);\r\n    const { style, id } = current || {};\r\n\r\n    const onClick = useCallback(() => {\r\n        if (id) {\r\n            dispatch({\r\n                type: \"update-html\",\r\n                data: {\r\n                    style: { ...style, ...alignmentStyle }\r\n                },\r\n                id,\r\n            });\r\n        }\r\n    }, [dispatch, alignmentStyle, id, style]);\r\n\r\n    const isActive = current\r\n        && current.style\r\n        && Array.from(Object.keys(alignmentStyle))\r\n            .every((key => {\r\n                return (alignmentStyle as any)[key] === (current.style as any)[key]\r\n            }));\r\n\r\n    const buttonStyle: CSSProperties = {\r\n        fontWeight: isActive ? \"bold\" : \"normal\",\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            style={buttonStyle}\r\n            icon={icon}\r\n            text={text}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n}\r\n\r\nexport const textAlignment = [\r\n    {\r\n        button: <AlignmentButton alignment=\"justify\" />,\r\n        parent,\r\n        id: \"align-justify\",\r\n    },\r\n    {\r\n        button: <AlignmentButton alignment=\"left\" />,\r\n        parent,\r\n        id: \"align-left\",\r\n    },\r\n    {\r\n        button: <AlignmentButton alignment=\"center\" />,\r\n        parent,\r\n        id: \"align-center\",\r\n    },\r\n    {\r\n        button: <AlignmentButton alignment=\"right\" />,\r\n        parent,\r\n        id: \"align-right\",\r\n    },\r\n];\r\n","import { textMain } from \"./text\";\r\nimport { textAlignment } from \"./alignment\";\r\n\r\nexport const text = [\r\n    ...textMain,\r\n    ...textAlignment,\r\n];\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const PhotoList = () => {\r\n    const [\r\n        photos,\r\n        setPhotos,\r\n    ] = useState([] as any[]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/photos?albumId=6')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log({ json });\r\n                setPhotos(json);\r\n            });\r\n\r\n    }, [setPhotos]);\r\n    return (\r\n        <>\r\n            {photos.map((p, index) => {\r\n                return (\r\n                    <img key={index} alt={p.title} src={p.thumbnailUrl} />\r\n                )\r\n            })\r\n            }\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"../button\";\r\nimport { faFilm } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebook, faGoogle, faInstagram, faFlickr } from '@fortawesome/free-brands-svg-icons';\r\nimport { PhotoList } from \"../photo-list\";\r\n\r\nconst parent = \"photo\";\r\nexport const photoToolbar = [\r\n    {\r\n        button: <Button icon={faFilm} text=\"Film roll\" />,\r\n        action: <PhotoList />,\r\n        id: \"filmroll\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faFacebook} text=\"Facebook\" />,\r\n        id: \"facebook\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faGoogle} text=\"Google\" />,\r\n        id: \"google\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faFlickr} text=\"Flickr\" />,\r\n        id: \"flickr\",\r\n        parent,\r\n    },\r\n    {\r\n        button: <Button icon={faInstagram} text=\"Instagram\" />,\r\n        id: \"instagram\",\r\n        parent,\r\n    },\r\n];","import React from \"react\";\r\n\r\nimport { Button } from \"../button\";\r\nimport { text } from \"./text\";\r\nimport { photoToolbar } from \"./photo-toolbar\";\r\nimport {faCameraRetro, faQuoteRight} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const editorToolbar = [\r\n    {\r\n        button: <Button icon={faCameraRetro} text=\"Photo\" />,\r\n        id: \"photo\",\r\n    },\r\n    {\r\n        button: <Button icon={faQuoteRight} text=\"Text\" />,\r\n        id: \"text\",\r\n    },\r\n    ...text,\r\n    ...photoToolbar,\r\n];","import React from \"react\";\r\n\r\nimport { Editor } from \"../editor/editor\";\r\nimport { Layout } from \"../layout\";\r\nimport { useEffect } from \"react\";\r\nimport { useToolbar } from \"../../contexts/toolbar-context\";\r\nimport { editorToolbar } from \"../editor-toolbar\";\r\nimport { useEditorReducer } from \"../../contexts/editor-context\";\r\nimport { HtmlData } from \"../../core/editor/types\";\r\n\r\n\r\nconst html = [\r\n    {\r\n        id: \"1\",\r\n        tag: \"h1\",\r\n        content: \"Heading 1\",\r\n        style: {\r\n            textAlign: \"left\",\r\n            fontSize: \"28px\",\r\n        },\r\n    },\r\n    {\r\n        id: \"2\",\r\n        tag: \"h2\",\r\n        content: \"Heading 2\",\r\n        style: {\r\n            textAlign: \"left\",\r\n            fontSize: \"22px\",\r\n        },\r\n    },\r\n    {\r\n        id: \"3\",\r\n        tag: \"h3\",\r\n        content: \"Heading 3\",\r\n        style: {\r\n            textAlign: \"left\",\r\n            fontSize: \"18px\",\r\n        },\r\n    },\r\n] as HtmlData[];\r\n\r\nexport const EditorScreen = () => {\r\n    const {\r\n        reset,\r\n    } = useToolbar();\r\n\r\n    const { state, dispatch } = useEditorReducer();\r\n    const { defaultStyle } = state;\r\n\r\n    useEffect(() => {\r\n        reset(editorToolbar);\r\n        return () => {\r\n            reset([]);\r\n        };\r\n    }, [reset]);\r\n\r\n    useEffect(() => {\r\n        Promise.resolve(html)\r\n            .then(fetchedHtml => {\r\n                dispatch({\r\n                    type: 'request-html-success',\r\n                    data: fetchedHtml.map(html => {\r\n                        const style = { ...defaultStyle, ...html.style };\r\n                        return { ...html, style };\r\n                    }),\r\n                })\r\n            });\r\n    }, [defaultStyle, dispatch]);\r\n\r\n    return (\r\n            <Layout>\r\n                <Editor />\r\n            </Layout>\r\n    );\r\n};\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCoffee,\n  faJedi,\n  faRobot,\n  faUserAstronaut,\n  faFish,\n  faPizzaSlice,\n  faStroopwafel,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { HomeScreen } from './components/home-screen';\nimport { TodosScreen } from './components/todos-screen';\nimport { EditorScreen } from './components/editor-screen';\nimport { EditorContextProvider } from './contexts/editor-context';\n\nlibrary.add(faCoffee,\n  faJedi,\n  faRobot,\n  faUserAstronaut,\n  faFish,\n  faPizzaSlice,\n  faStroopwafel,\n);\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <EditorContextProvider>\n        <Switch>\n          <Route path=\"/todos\">\n            <TodosScreen />\n          </Route>\n          <Route path=\"/editor\">\n            <EditorScreen />\n          </Route>\n          <Route path=\"/\">\n            <HomeScreen />\n          </Route>\n        </Switch>\n      </EditorContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { NavigationProvider } from './contexts/toolbar-context';\nimport { TodoProvider } from './contexts/todo-context';\nimport { ViewContextProvider } from './contexts/view-context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ViewContextProvider>\n      <TodoProvider>\n        <NavigationProvider\n          paths={[]}\n        >\n          <App />\n        </NavigationProvider>\n      </TodoProvider>\n    </ViewContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}